{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAW,CACfC,KAAMC,SAASC,cAAc,SAC7BC,UAAWF,SAASC,cAAc,UAClCE,WAAYH,SAASC,cAAc,uBACnCG,UAAWJ,SAASC,cAAc,sBAClCI,OAAQL,SAASC,cAAc,yBAmBjC,SAASK,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAEpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,G,GAEpBA,E,IAGFU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBG,EAAAxB,GAASyB,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAEvEO,OAAM,SAAAL,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBG,EAAAxB,GAASyB,OAAOI,QAAQ,sBAAqCF,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAhCzEnB,EAASI,UAAUwB,iBAAiB,SAEpC,SAAuBC,GACrBA,EAAIC,iBAOJ,IANA,IAAIX,EAAQY,OAAO/B,EAASK,WAAW2B,OAEjCC,EAAOF,OAAO/B,EAASM,UAAU0B,OACjCE,EAAQH,OAAO/B,EAASO,OAAOyB,OAG5BG,EAAI,EAAGA,GAAKD,EAAOC,GAAK,EAC/B3B,EAAc2B,EAAGhB,GACjBA,GAASc,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst elements = {\n  form: document.querySelector('.form'),\n  submitBtn: document.querySelector('button'),\n  firstDelay: document.querySelector('input[name=\"delay\"]'),\n  stepDelay: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nelements.submitBtn.addEventListener('click', handlerSubmit);\n\nfunction handlerSubmit(evt) {\n  evt.preventDefault();\n  let delay = Number(elements.firstDelay.value);\n\n  const step = Number(elements.stepDelay.value);\n  const amoun = Number(elements.amount.value);\n  let position;\n\n  for (let i = 1; i <= amoun; i += 1) {\n    createPromise(i, delay);\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$elements","form","document","querySelector","submitBtn","firstDelay","stepDelay","amount","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","addEventListener","evt","preventDefault","Number","value","step","amoun","i"],"version":3,"file":"03-promises.f24a6e77.js.map"}